# theme
include ./snazzy.conf

listen_on unix:/tmp/kitty.sock

# fonts
font_family FiraCode Nerd Font Mono Retina
font_size 16

# cursor
cursor #ffffff
cursor_shape block
cursor_text_color #111111
shell_integration no-cursor

# tabs
tab_bar_style hidden

# allow other programs to control kitty
allow_remote_control yes

# macOS
macos_option_as_alt yes

enabled_layouts splits,stack

# key bindings

# zoom
map super+j>z toggle_layout stack

# intuitive shortcuts for splitting tabs into windows
map super+j>- launch --cwd=current --location=hsplit --copy-env
map super+j>\ launch --cwd=current --location=vsplit --copy-env

# open new tab under the same session
map super+j>t launch --type tab --cwd=current --copy-env

# switch easily between tabs
map super+j>w launch --type tab --env __KITTY_HELPER_TAB=1 --title 'Switch Tab' fish -c "__KITTY_PREVIOUS_WINDOW_ID=$argv[1] kitty-window-manager switch" @active-kitty-window-id

# interactively open project tabs
map super+j>p launch --type tab --env __KITTY_HELPER_TAB=1 --title 'Open Project' fish -c "__KITTY_PREVIOUS_WINDOW_ID=$argv[1] kitty-window-manager open-project" @active-kitty-window-id

# focus/open home tab
map super+j>0 launch --type tab --cwd /tmp fish -c "kitty @ focus-window --match 'cwd:^${HOME}$' 2>/dev/null || kitty @ launch --type tab --cwd $HOME"

# moving through windows with vim-like bindings
map super+j>h neighboring_window left
map super+j>l neighboring_window right
map super+j>k neighboring_window down
map super+j>j neighboring_window up

# swap windows
map super+j>s swap_with_window

# TODO: detach window into its own tab

# resize window
map alt+n resize_window narrower
map alt+w resize_window wider
map alt+t resize_window taller
map alt+s resize_window shorter
map alt+r reset_window_sizes
